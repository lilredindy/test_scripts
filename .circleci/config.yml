# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk-node-browsers
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    #working_directory: ~/project

    environment:
      # Customize the JVM maximum heap limit
     # MAVEN_OPTS: -Xmx3200m
    
    steps:
      - checkout
      - run: mkdir test-reports
      
      - run: wget https://github.com/mozilla/geckodriver/releases/download/v0.18.0/geckodriver-v0.18.0-linux64.tar.gz
      - run: tar -xvzf geckodriver*
      - run: chmod +x geckodriver
      - run: sudo mv geckodriver /usr/local/bin
      
      - run:
          name: Download Selenium
          command: |
            curl -O http://selenium-release.storage.googleapis.com/3.5/selenium-server-standalone-3.5.3.jar
      - run:
          name: Start Selenium
          command: |
            java -jar selenium-server-standalone-3.5.3.jar -log test-reports/selenium.log
          background: true

      - run: sudo apt-get install junit4
      - run: javac -classpath ~/project/selenium-server-standalone-3.5.3.jar ~/project/exams/crowdTwist/*.java
      - run: java -Dbrowser=chrome -cp /home/circleci/project/selenium-server-standalone-3.5.3.jar:/usr/share/java/junit4.jar:/home/circleci/project/exams/crowdTwist/:.  org.junit.runner.JUnitCore CrowdTwistTests      
      - run: java -Dbrowser=firefox -cp /home/circleci/project/selenium-server-standalone-3.5.3.jar:/usr/share/java/junit4.jar:/home/circleci/project/exams/crowdTwist/:.  org.junit.runner.JUnitCore CrowdTwistTests
      
      # Download and cache dependencies
      #- restore_cache:
       #   keys:
        #  - v1-dependencies-{{ checksum "pom.xml" }}
          # fallback to using the latest cache if no exact match is found
         # - v1-dependencies-

      #- run: mvn dependency:go-offline

     # - save_cache:
      #    paths:
       #     - ~/.m2
        #  key: v1-dependencies-{{ checksum "pom.xml" }}
        
      # run tests!
     # - run: mvn integration-test

