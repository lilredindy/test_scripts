XML is used to tag the data, SOAP is used to transfer the data, WSDL is used for describing the services available and UDDI is used for listing what services are available. 
________________________________________________
The access logs of most web servers keep detailed information about where visitors came from and how they browsed the hosted site. 
________________________________________________
You don't actually write instance methods in Python; what you write is class methods which (must) take an instance as a first parameter. And therefore, you’ll have to place the instance parameter somewhere explicitly.
________________________________________________
In order to bootstrap the database system, a freshly initialized system always contains one predefined role. This role is always a "superuser", and by default (unless altered when running initdb) it will have the same name as the operating system user that initialized the database cluster. Customarily, this role will be named postgres. In order to create more roles you first have to connect as this initial role.
________________________________________________
installing appium with node.js was a bitch:
sudo chown -R <yourUsername>:staff /usr/local/lib
________________________________________________
Relational databases cannot be load balanced like webservers
________________________________________________
extract jar:  jar xf foo.jar
view jar content: jar tvf foo.jar
create jar: jar cvf foo.jar
________________________________________________
no javascript events are triggered before the document is ready (DOM is fully loaded). 
________________________________________________
curl is pipe, wget is cp
all pre-requisite files & goes to foreign host:
wget -p -H http://www.nytimes.com 
________________________________________________
java org.testng.TestNG testng.xml
java org.junit.runner.JUnitCore <classname>
python test.py #run pyunit test
nosetests -v nosetest.py #run parameterized nose
________________________________________________
Server side validation is performed by a web server, after input has been sent to the server.
Client side validation is performed by a web browser, before input is sent to a web server
________________________________________________
a shell account is a user acct on a remote server.
________________________________________________
selenium server needs to be updated to work with latest browsers, often tester needs to downgrade browser for working with latest selenium server
________________________________________________
php 5.4.17 works on win xp, nothing above
________________________________________________
commands:
adb devices
android avd
android list avd
android create avd -n "Nexus_7" -t 3
emulator -avd "Nexus_7"

npm list -g --depth=0
du -sh .
________________________________________________
initilize a postgres server: initdb -D /usr/local/pgsql/data
start the postgres server: postgres -D /usr/local/pgsql/data
connect to server: psql -d db_name
change password for current user: alter user user_name with password 'new_password';\
show tables: show \d
restore db: psql -d template1 -U shriamin -f ./sql/booktown.sql
drop databse: psql -d template1 -U shriamin -c "drop database booktown"
show user info: psql -d template1 -c "select * from pg_user"
________________________________________________
an API is a libary of functions often exposed thru it's interface.  internet api is same thing just over a network. 
_____________________________________________
Most HTTP conversation does not drop the connection on every request, but rather multiple HTTP requests are pipelined in the same connection. In HTTP 1.0, client can indicate that it wants to send multiple requests in the same connection by using Connection: Keep-Alive header, in HTTP 1.1, keep alive is the default, and client and server only drops connection when explicitly requested and on timeout.
The reason HTTP is stateless is not because it uses a new connection for each request, but because every request is independent of any other requests whether they are transported through the same connection or a different connection. In other words every request contains every information that is needed to process that request. 
________________________________________________
Continuous Delivery doesn't mean every change is deployed to production ASAP. It means every change is proven to be deployable at any time

-Continuous integration: your application always builds and passes its tests, including all the pieces from different sub-teams.
-Continuous delivery: your application always builds and deploys to a test environment and passes its tests.
-Continuous deployment: your application is always ready to deploy to production through a largely automated process.
